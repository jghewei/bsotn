/******************************************************************************
 *   COPYRIGHT (C) 2011 PMC-SIERRA, INC. ALL RIGHTS RESERVED.
 * --------------------------------------------------------------------------
 *  This software embodies materials and concepts which are proprietary and
 *  confidential to PMC-Sierra, Inc.
 *  PMC-Sierra distributes this software to its customers pursuant to the
 *  terms and conditions of the Software License Agreement
 *  contained in the text file software.lic that is distributed along with
 *  the software. This software can only be utilized if all
 *  terms and conditions of the Software License Agreement are
 *  accepted. If there are any questions, concerns, or if the
 *  Software License Agreement text file, software.lic, is missing please
 *  contact PMC-Sierra for assistance.
 * -------------------------------------------------------------------------
 *   DESCRIPTION:
 *     contains prototypes for the field accessor functions
 *     and register accessor functions for the epmm_cbr_100ge_wrap block
 * 
 *   NOTES:
 *     This file is generated by the script codegen.pm, version 1.1
 *     Do not modify this file.
 * 
 *     The input file is ../src/ioxml/pm30_60_204_map.xml
 *     block_uri "../lw30_60_218_reg.xml"
 *     block_part_number "LW30_60_218"
 *     block_mnemonic "CBR_100GE_WRAP"
 * 
 *****************************************************************************/

/*--------------------------------------------------------------------------------.
 | The pattern for accessing epmm_cbr_100ge_wrap io functions is:
 | {
 |     epmm_cbr_100ge_wrap_buffer_t b[1];
 |     epmm_cbr_100ge_wrap_buffer_init( b, h );
 |     value = epmm_cbr_100ge_wrap_field_<FIELD>_get( b, h );
 |     epmm_cbr_100ge_wrap_field_<FIELD>_set( b, h , value );
 | ...
 |     epmm_cbr_100ge_wrap_buffer_flush( b );
 | }
 | 
 | alternatively, if register coalescing is not needed then omit the buffer like:
 | 
 | value = epmm_cbr_100ge_wrap_field_<FIELD>_get( NULL, h );
 | epmm_cbr_100ge_wrap_field_<FIELD>_set( NULL, h , value );
 | 
 +-------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------------------------.
 | 
 | +-------------------------+
 | | Register 0x00002000 CFG |
 | +-------------------------+
 | | bit  0 R/W  SW_RST      |
 | +-------------------------+
 | 
 | void   epmm_cbr_100ge_wrap_field_SW_RST_set ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 value )
 | UINT32 epmm_cbr_100ge_wrap_field_SW_RST_get ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h )
 +----------------------------------------------------------------------------------------------------------------*/
#ifndef _EPMM_CBR_100GE_WRAP_IO_H
#define _EPMM_CBR_100GE_WRAP_IO_H

#include "epmm_loc.h"
#include "epmm_cbr_100ge_wrap_regs.h"
#include "epmm_cbr_100ge_wrap_io_inline.h"


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | TSB access functions
 +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions do not need to be accessed directly,... just included here for completeness.
 +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void      epmm_cbr_100ge_wrap_buffer_init               ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h )
 | void      epmm_cbr_100ge_wrap_buffer_flush              ( epmm_cbr_100ge_wrap_buffer_t *b )
 | UINT32    epmm_cbr_100ge_wrap_reg_read                  ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mem_type, UINT32 reg )
 | void      epmm_cbr_100ge_wrap_reg_write                 ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 value )
 | void      epmm_cbr_100ge_wrap_field_set                 ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 unused_mask, UINT32 ofs, UINT32 value )
 | void      epmm_cbr_100ge_wrap_action_on_write_field_set ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 ofs, UINT32 value )
 | void      epmm_cbr_100ge_wrap_burst_read                ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | void      epmm_cbr_100ge_wrap_burst_write               ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | PMC_ERROR epmm_cbr_100ge_wrap_poll_bit                  ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------------------------------------.
 | Functions to Access Registers
 +-------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions can be used if for some reason the field getters & setters are not appropriate.
 +-------------------------------------------------------------------------------------------------------------------------------------------+
 | void   epmm_cbr_100ge_wrap_reg_CFG_write     ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 value )
 | void   epmm_cbr_100ge_wrap_reg_CFG_field_set ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32 epmm_cbr_100ge_wrap_reg_CFG_read      ( epmm_cbr_100ge_wrap_buffer_t *b, epmm_handle_t *h )
 | 
 +------------------------------------------------------------------------------------------------------------------------------------------*/
#endif /* _EPMM_CBR_100GE_WRAP_IO_H */
