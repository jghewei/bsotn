/******************************************************************************
 *   COPYRIGHT (C) 2011 PMC-SIERRA, INC. ALL RIGHTS RESERVED.
 * --------------------------------------------------------------------------
 *  This software embodies materials and concepts which are proprietary and
 *  confidential to PMC-Sierra, Inc.
 *  PMC-Sierra distributes this software to its customers pursuant to the
 *  terms and conditions of the Software License Agreement
 *  contained in the text file software.lic that is distributed along with
 *  the software. This software can only be utilized if all
 *  terms and conditions of the Software License Agreement are
 *  accepted. If there are any questions, concerns, or if the
 *  Software License Agreement text file, software.lic, is missing please
 *  contact PMC-Sierra for assistance.
 * -------------------------------------------------------------------------
 *   DESCRIPTION:
 *     contains prototypes for the field accessor functions
 *     and register accessor functions for the odujat_core block
 * 
 *   NOTES:
 *     This file is generated by the script codegen.pm, version 1.1
 *     Do not modify this file.
 * 
 *     The input file is ../src/ioxml/pm55_82_09_ad_map.xml
 *     block_uri "file:../docs/rda/pm20_15_101_reg.xml"
 *     block_part_number "PM20_15_101"
 *     block_mnemonic "ODUJAT_CORE"
 * 
 *****************************************************************************/

/*--------------------------------------------------------------------------------.
 | The pattern for accessing odujat_core io functions is:
 | {
 |     odujat_core_buffer_t b[1];
 |     odujat_core_buffer_init( b, h, A );
 |     value = odujat_core_field_<FIELD>_get( b, h, A );
 |     odujat_core_field_<FIELD>_set( b, h, A , value );
 | ...
 |     odujat_core_buffer_flush( b );
 | }
 | 
 | alternatively, if register coalescing is not needed then omit the buffer like:
 | 
 | value = odujat_core_field_<FIELD>_get( NULL, h, A );
 | odujat_core_field_<FIELD>_set( NULL, h, A , value );
 | 
 +-------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | 
 | +-------------------------+
 | | Register 0x001a0000 CFG |
 | +-------------------------+
 | | bit  9 R/W  RAM_LS      |
 | | bit  8 R/W  PG_OVERRIDE |
 | +-------------------------+
 | 
 | void   odujat_core_field_RAM_LS_set      ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | UINT32 odujat_core_field_RAM_LS_get      ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | void   odujat_core_field_PG_OVERRIDE_set ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | UINT32 odujat_core_field_PG_OVERRIDE_get ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | 
 | +--------------------------------+
 | | Register 0x001a0004 ERR_INT_EN |
 | +--------------------------------+
 | | bit  0 R/W  GAIN_OVF_E         |
 | | bit  1 R/W  GAIN_UNDF_E        |
 | +--------------------------------+
 | 
 | void   odujat_core_field_GAIN_OVF_E_set  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | UINT32 odujat_core_field_GAIN_OVF_E_get  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | void   odujat_core_field_GAIN_UNDF_E_set ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | UINT32 odujat_core_field_GAIN_UNDF_E_get ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | 
 | +------------------------------+
 | | Register 0x001a0008 ERR_INTS |
 | +------------------------------+
 | | bit  0 R/W  GAIN_OVF_I       |
 | | bit  1 R/W  GAIN_UNDF_I      |
 | +------------------------------+
 | 
 | void      odujat_core_field_GAIN_OVF_I_set_to_clear  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | UINT32    odujat_core_field_GAIN_OVF_I_get           ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | PMC_ERROR odujat_core_field_GAIN_OVF_I_poll_bit      ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | void      odujat_core_field_GAIN_UNDF_I_set_to_clear ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | UINT32    odujat_core_field_GAIN_UNDF_I_get          ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | PMC_ERROR odujat_core_field_GAIN_UNDF_I_poll_bit     ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +------------------------------+
 | | Register 0x001a000c ERR_CHAN |
 | +------------------------------+
 | | bit  6:0 R  GAIN_ERR_CHAN    |
 | +------------------------------+
 | 
 | UINT32 odujat_core_field_GAIN_ERR_CHAN_get       ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | UINT32 odujat_core_field_range_GAIN_ERR_CHAN_get ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +----------------------------------------------+
 | | Register (0x001a0100 + (N) * 0x8) CHAN_CFG_0 |
 | |     N[0..95]                                 |
 | +----------------------------------------------+
 | | bit  17   R/W  JAT_ENABLE                    |
 | | bit  16   R/W  ADD_CND                       |
 | | bit  11:8 R/W  LOOP_ALPHA_SELECT             |
 | | bit  4:0  R/W  CONV_GAIN_SELECT              |
 | +----------------------------------------------+
 | 
 | void   odujat_core_field_JAT_ENABLE_set              ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 value )
 | UINT32 odujat_core_field_JAT_ENABLE_get              ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N )
 | void   odujat_core_field_ADD_CND_set                 ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 value )
 | UINT32 odujat_core_field_ADD_CND_get                 ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N )
 | void   odujat_core_field_LOOP_ALPHA_SELECT_set       ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 value )
 | UINT32 odujat_core_field_LOOP_ALPHA_SELECT_get       ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N )
 | void   odujat_core_field_range_LOOP_ALPHA_SELECT_set ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 odujat_core_field_range_LOOP_ALPHA_SELECT_get ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | void   odujat_core_field_CONV_GAIN_SELECT_set        ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 value )
 | UINT32 odujat_core_field_CONV_GAIN_SELECT_get        ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N )
 | void   odujat_core_field_range_CONV_GAIN_SELECT_set  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 odujat_core_field_range_CONV_GAIN_SELECT_get  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +----------------------------------------------+
 | | Register (0x001a0104 + (N) * 0x8) CHAN_CFG_1 |
 | |     N[0..95]                                 |
 | +----------------------------------------------+
 | | bit  25:0 R/W  MC_NUMERATOR                  |
 | +----------------------------------------------+
 | 
 | void   odujat_core_field_MC_NUMERATOR_set       ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 value )
 | UINT32 odujat_core_field_MC_NUMERATOR_get       ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N )
 | void   odujat_core_field_range_MC_NUMERATOR_set ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 odujat_core_field_range_MC_NUMERATOR_get ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#ifndef _ODUJAT_CORE_IO_H
#define _ODUJAT_CORE_IO_H

#include "coreotn_loc.h"
#include "odujat_core_regs.h"
#include "odujat_core_io_inline.h"


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | TSB access functions
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions do not need to be accessed directly,... just included here for completeness.
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void      odujat_core_buffer_init               ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | void      odujat_core_buffer_flush              ( odujat_core_buffer_t *b )
 | UINT32    odujat_core_reg_read                  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mem_type, UINT32 reg )
 | void      odujat_core_reg_write                 ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 value )
 | void      odujat_core_field_set                 ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 unused_mask, UINT32 ofs, UINT32 value )
 | void      odujat_core_action_on_write_field_set ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 ofs, UINT32 value )
 | void      odujat_core_burst_read                ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | void      odujat_core_burst_write               ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | PMC_ERROR odujat_core_poll_bit                  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | Functions to Access Registers
 +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions can be used if for some reason the field getters & setters are not appropriate.
 +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void      odujat_core_reg_CFG_write                          ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | void      odujat_core_reg_CFG_field_set                      ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    odujat_core_reg_CFG_read                           ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | 
 | void      odujat_core_reg_CHAN_CFG_0_array_write             ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 value )
 | void      odujat_core_reg_CHAN_CFG_0_array_field_set         ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    odujat_core_reg_CHAN_CFG_0_array_read              ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N )
 | 
 | void      odujat_core_reg_CHAN_CFG_1_array_write             ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 value )
 | void      odujat_core_reg_CHAN_CFG_1_array_field_set         ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    odujat_core_reg_CHAN_CFG_1_array_read              ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32  N )
 | 
 | void      odujat_core_reg_ERR_INT_EN_write                   ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | void      odujat_core_reg_ERR_INT_EN_field_set               ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    odujat_core_reg_ERR_INT_EN_read                    ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | 
 | void      odujat_core_reg_ERR_INTS_write                     ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 value )
 | void      odujat_core_reg_ERR_INTS_action_on_write_field_set ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    odujat_core_reg_ERR_INTS_read                      ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | PMC_ERROR odujat_core_reg_ERR_INTS_poll_bit                  ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | UINT32    odujat_core_reg_ERR_CHAN_read                      ( odujat_core_buffer_t *b, coreotn_handle_t *h, UINT32 A )
 | 
 +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#endif /* _ODUJAT_CORE_IO_H */
