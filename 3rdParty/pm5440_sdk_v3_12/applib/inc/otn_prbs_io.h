/******************************************************************************
 *   COPYRIGHT (C) 2011 PMC-SIERRA, INC. ALL RIGHTS RESERVED.
 * --------------------------------------------------------------------------
 *  This software embodies materials and concepts which are proprietary and
 *  confidential to PMC-Sierra, Inc.
 *  PMC-Sierra distributes this software to its customers pursuant to the
 *  terms and conditions of the Software License Agreement
 *  contained in the text file software.lic that is distributed along with
 *  the software. This software can only be utilized if all
 *  terms and conditions of the Software License Agreement are
 *  accepted. If there are any questions, concerns, or if the
 *  Software License Agreement text file, software.lic, is missing please
 *  contact PMC-Sierra for assistance.
 * -------------------------------------------------------------------------
 *   DESCRIPTION:
 *     contains prototypes for the field accessor functions
 *     and register accessor functions for the otn_prbs block
 * 
 *   NOTES:
 *     This file is generated by the script codegen.pm, version 1.1
 *     Do not modify this file.
 * 
 *     The input file is ../src/ioxml/lw55_10_13_reg.xml
 *     block_uri "file:../docs/rda/lw55_10_13_reg.xml"
 *     block_part_number "LW55_10_13"
 *     block_mnemonic "OTN_PRBS"
 * 
 *****************************************************************************/

/*--------------------------------------------------------------------------------.
 | The pattern for accessing otn_prbs io functions is:
 | {
 |     otn_prbs_buffer_t b[1];
 |     otn_prbs_buffer_init( b, h );
 |     value = otn_prbs_field_<FIELD>_get( b, h );
 |     otn_prbs_field_<FIELD>_set( b, h , value );
 | ...
 |     otn_prbs_buffer_flush( b );
 | }
 | 
 | alternatively, if register coalescing is not needed then omit the buffer like:
 | 
 | value = otn_prbs_field_<FIELD>_get( NULL, h );
 | otn_prbs_field_<FIELD>_set( NULL, h , value );
 | 
 +-------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | 
 | +----------------------------------------------------+
 | | Register (0x00000000 + (N) * 0x10) PRBS_CONFIG_REG |
 | |     N[0..11]                                       |
 | +----------------------------------------------------+
 | | bit  14:8 R/W  PRBS_CHID                           |
 | | bit  3    R/W  PRBS_SEL_INV_NONINV                 |
 | | bit  2    R/W  PRBS_SEL_31_11                      |
 | | bit  1    R/W  PRBS_MON_EN                         |
 | | bit  0    R/W  PRBS_GEN_EN                         |
 | +----------------------------------------------------+
 | 
 | void   otn_prbs_field_PRBS_CHID_set           ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_CHID_get           ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | void   otn_prbs_field_range_PRBS_CHID_set     ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 otn_prbs_field_range_PRBS_CHID_get     ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | void   otn_prbs_field_PRBS_SEL_INV_NONINV_set ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_SEL_INV_NONINV_get ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | void   otn_prbs_field_PRBS_SEL_31_11_set      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_SEL_31_11_get      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | void   otn_prbs_field_PRBS_MON_EN_set         ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_MON_EN_get         ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | void   otn_prbs_field_PRBS_GEN_EN_set         ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_GEN_EN_get         ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | 
 | +-----------------------------------------------------------+
 | | Register (0x00000004 + (N) * 0x10) PRBS_DEFECT_CONFIG_REG |
 | |     N[0..11]                                              |
 | +-----------------------------------------------------------+
 | | bit  0 R/W  PRBS_INS_DEFECT                               |
 | +-----------------------------------------------------------+
 | 
 | void   otn_prbs_field_PRBS_INS_DEFECT_set ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_INS_DEFECT_get ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | 
 | +------------------------------------------------------+
 | | Register (0x00000008 + (N) * 0x10) PRBS_TSE_STAT_REG |
 | |     N[0..11]                                         |
 | +------------------------------------------------------+
 | | bit  31:0 R  PRBS_TSE_CHAN_REG                       |
 | +------------------------------------------------------+
 | 
 | UINT32 otn_prbs_field_PRBS_TSE_CHAN_REG_get       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | UINT32 otn_prbs_field_range_PRBS_TSE_CHAN_REG_get ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-------------------------------------------+
 | | Register 0x000000c0 PRBS_BER_TH_LOWER_REG |
 | +-------------------------------------------+
 | | bit  31:0 R/W  PRBS_BER_THRES             |
 | +-------------------------------------------+
 | 
 | void   otn_prbs_lfield_PRBS_BER_THRES_set       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value[2] )
 | void   otn_prbs_lfield_PRBS_BER_THRES_get       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value[2] )
 | void   otn_prbs_lfield_range_PRBS_BER_THRES_set ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 otn_prbs_lfield_range_PRBS_BER_THRES_get ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------+
 | | Register 0x000000c8 PRBS_RESEED_REG  |
 | +--------------------------------------+
 | | bit  31:16 R/W  PRBS_RESEED_THR      |
 | | bit  15:0  R/W  PRBS_RESEED_INTERVAL |
 | +--------------------------------------+
 | 
 | void   otn_prbs_field_PRBS_RESEED_THR_set            ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_RESEED_THR_get            ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | void   otn_prbs_field_range_PRBS_RESEED_THR_set      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 otn_prbs_field_range_PRBS_RESEED_THR_get      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   otn_prbs_field_PRBS_RESEED_INTERVAL_set       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_RESEED_INTERVAL_get       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | void   otn_prbs_field_range_PRBS_RESEED_INTERVAL_set ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 otn_prbs_field_range_PRBS_RESEED_INTERVAL_get ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +------------------------------------------------+
 | | Register 0x000000d4 PRBS_TSE_ROLLOVER_STAT_REG |
 | +------------------------------------------------+
 | | bit  11:0 R  PRBS_TSE_ROVER                    |
 | +------------------------------------------------+
 | 
 | UINT32 otn_prbs_field_PRBS_TSE_ROVER_get       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | UINT32 otn_prbs_field_range_PRBS_TSE_ROVER_get ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +------------------------------------------+
 | | Register 0x000000d8 PRBS_DLSS_INT_EN_REG |
 | +------------------------------------------+
 | | bit  11:0 R/W  PRBS_DLSS_E               |
 | +------------------------------------------+
 | 
 | void   otn_prbs_field_PRBS_DLSS_E_set       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | UINT32 otn_prbs_field_PRBS_DLSS_E_get       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | void   otn_prbs_field_range_PRBS_DLSS_E_set ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 otn_prbs_field_range_PRBS_DLSS_E_get ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------------+
 | | Register 0x000000dc PRBS_DLSS_INT_STAT_REG |
 | +--------------------------------------------+
 | | bit  11:0 R/W  PRBS_DLSS_I                 |
 | +--------------------------------------------+
 | 
 | void      otn_prbs_field_PRBS_DLSS_I_set_to_clear       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | UINT32    otn_prbs_field_PRBS_DLSS_I_get                ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | void      otn_prbs_field_range_PRBS_DLSS_I_set_to_clear ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32    otn_prbs_field_range_PRBS_DLSS_I_get          ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_ERROR otn_prbs_field_range_PRBS_DLSS_I_poll_bit     ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_ERROR otn_prbs_field_PRBS_DLSS_I_poll_bit           ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +-------------------------------------------+
 | | Register 0x000000e0 PRBS_DLSS_INT_VAL_REG |
 | +-------------------------------------------+
 | | bit  11:0 R  PRBS_DLSS_V                  |
 | +-------------------------------------------+
 | 
 | UINT32    otn_prbs_field_PRBS_DLSS_V_get            ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | UINT32    otn_prbs_field_range_PRBS_DLSS_V_get      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_ERROR otn_prbs_field_range_PRBS_DLSS_V_poll_bit ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_ERROR otn_prbs_field_PRBS_DLSS_V_poll_bit       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#ifndef _OTN_PRBS_IO_H
#define _OTN_PRBS_IO_H

#include "otn_prbs_loc.h"
#include "otn_prbs_regs.h"
#include "otn_prbs_io_inline.h"


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | TSB access functions
 +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions do not need to be accessed directly,... just included here for completeness.
 +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void      otn_prbs_buffer_init               ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | void      otn_prbs_buffer_flush              ( otn_prbs_buffer_t *b )
 | UINT32    otn_prbs_reg_read                  ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mem_type, UINT32 reg )
 | void      otn_prbs_reg_write                 ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 value )
 | void      otn_prbs_field_set                 ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 unused_mask, UINT32 ofs, UINT32 value )
 | void      otn_prbs_action_on_write_field_set ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 ofs, UINT32 value )
 | void      otn_prbs_burst_read                ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | void      otn_prbs_burst_write               ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | PMC_ERROR otn_prbs_poll_bit                  ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | Functions to Access Registers
 +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions can be used if for some reason the field getters & setters are not appropriate.
 +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void      otn_prbs_reg_PRBS_BER_TH_LOWER_REG_write                      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | void      otn_prbs_reg_PRBS_BER_TH_LOWER_REG_field_set                  ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    otn_prbs_reg_PRBS_BER_TH_LOWER_REG_read                       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | 
 | void      otn_prbs_reg_PRBS_BER_TH_UPPER_REG_write                      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | void      otn_prbs_reg_PRBS_BER_TH_UPPER_REG_field_set                  ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    otn_prbs_reg_PRBS_BER_TH_UPPER_REG_read                       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | 
 | void      otn_prbs_reg_PRBS_RESEED_REG_write                            ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | void      otn_prbs_reg_PRBS_RESEED_REG_field_set                        ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    otn_prbs_reg_PRBS_RESEED_REG_read                             ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | 
 | void      otn_prbs_reg_PRBS_CONFIG_REG_array_write                      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | void      otn_prbs_reg_PRBS_CONFIG_REG_array_field_set                  ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    otn_prbs_reg_PRBS_CONFIG_REG_array_read                       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | 
 | void      otn_prbs_reg_PRBS_DEFECT_CONFIG_REG_array_write               ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 value )
 | void      otn_prbs_reg_PRBS_DEFECT_CONFIG_REG_array_field_set           ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    otn_prbs_reg_PRBS_DEFECT_CONFIG_REG_array_read                ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | 
 | void      otn_prbs_reg_PRBS_DLSS_INT_EN_REG_write                       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | void      otn_prbs_reg_PRBS_DLSS_INT_EN_REG_field_set                   ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    otn_prbs_reg_PRBS_DLSS_INT_EN_REG_read                        ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | 
 | void      otn_prbs_reg_PRBS_DLSS_INT_STAT_REG_write                     ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 value )
 | void      otn_prbs_reg_PRBS_DLSS_INT_STAT_REG_action_on_write_field_set ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    otn_prbs_reg_PRBS_DLSS_INT_STAT_REG_read                      ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | PMC_ERROR otn_prbs_reg_PRBS_DLSS_INT_STAT_REG_poll_bit                  ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | UINT32    otn_prbs_reg_PRBS_DLSS_INT_VAL_REG_read                       ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | PMC_ERROR otn_prbs_reg_PRBS_DLSS_INT_VAL_REG_poll_bit                   ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | UINT32    otn_prbs_reg_PRBS_TSE_ROLLOVER_STAT_REG_read                  ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h )
 | 
 | UINT32    otn_prbs_reg_PRBS_TSE_STAT_REG_array_read                     ( otn_prbs_buffer_t *b, otn_prbs_handle_t *h, UINT32  N )
 | 
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#endif /* _OTN_PRBS_IO_H */
