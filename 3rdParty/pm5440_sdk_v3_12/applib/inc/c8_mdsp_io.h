/******************************************************************************
 *   COPYRIGHT (C) 2011 PMC-SIERRA, INC. ALL RIGHTS RESERVED.
 * --------------------------------------------------------------------------
 *  This software embodies materials and concepts which are proprietary and
 *  confidential to PMC-Sierra, Inc.
 *  PMC-Sierra distributes this software to its customers pursuant to the
 *  terms and conditions of the Software License Agreement
 *  contained in the text file software.lic that is distributed along with
 *  the software. This software can only be utilized if all
 *  terms and conditions of the Software License Agreement are
 *  accepted. If there are any questions, concerns, or if the
 *  Software License Agreement text file, software.lic, is missing please
 *  contact PMC-Sierra for assistance.
 * -------------------------------------------------------------------------
 *   DESCRIPTION:
 *     contains prototypes for the field accessor functions
 *     and register accessor functions for the c8_mdsp block
 * 
 *   NOTES:
 *     This file is generated by the script codegen.pm, version 1.1
 *     Do not modify this file.
 * 
 *     The input file is ../src/ioxml-filtered/cni_uni_txrx_apb_bridge.xml
 *     block_uri "TBD"
 *     block_part_number "PM20_80_19"
 *     block_mnemonic "MDSP_C8_40N"
 * 
 *****************************************************************************/

/*--------------------------------------------------------------------------------.
 | The pattern for accessing c8_mdsp io functions is:
 | {
 |     c8_mdsp_buffer_t b_ptr[1];
 |     c8_mdsp_buffer_init( b_ptr, h_ptr, A );
 |     value = c8_mdsp_field_<FIELD>_get( b_ptr, h_ptr, A );
 |     c8_mdsp_field_<FIELD>_set( b_ptr, h_ptr, A , value );
 | ...
 |     c8_mdsp_buffer_flush( b_ptr );
 | }
 | 
 | alternatively, if register coalescing is not needed then omit the buffer like:
 | 
 | value = c8_mdsp_field_<FIELD>_get( NULL, h_ptr, A );
 | c8_mdsp_field_<FIELD>_set( NULL, h_ptr, A , value );
 | 
 +-------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------.
 | 
 | +-----------------------------------------+
 | | Register 0x00000400 CENTAUR8_CDRU_CFG_1 |
 | +-----------------------------------------+
 | | bit  16 R/W  INV_REC_DATA               |
 | +-----------------------------------------+
 | 
 | void   c8_mdsp_field_INV_REC_DATA_set ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 value )
 | UINT32 c8_mdsp_field_INV_REC_DATA_get ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A )
 +--------------------------------------------------------------------------------------------------------------*/
#ifndef _C8_MDSP_IO_H
#define _C8_MDSP_IO_H

#include "c8.h"
#include "c8_mdsp_regs.h"
#include "c8_mdsp_io_inline.h"


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | TSB access functions
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions do not need to be accessed directly,... just included here for completeness.
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void                 c8_mdsp_buffer_init               ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A )
 | void                 c8_mdsp_buffer_flush              ( c8_mdsp_buffer_t *b_ptr )
 | UINT32               c8_mdsp_reg_read                  ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mem_type, UINT32 reg )
 | void                 c8_mdsp_reg_write                 ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 value )
 | void                 c8_mdsp_field_set                 ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 unused_mask, UINT32 ofs, UINT32 value )
 | void                 c8_mdsp_action_on_write_field_set ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 ofs, UINT32 value )
 | void                 c8_mdsp_burst_read                ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | void                 c8_mdsp_burst_write               ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | PMC_POLL_RETURN_TYPE c8_mdsp_poll                      ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------.
 | Functions to Access Registers
 +---------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions can be used if for some reason the field getters & setters are not appropriate.
 +---------------------------------------------------------------------------------------------------------------------------------------------------+
 | void   c8_mdsp_reg_CENTAUR8_CDRU_CFG_1_write     ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 value )
 | void   c8_mdsp_reg_CENTAUR8_CDRU_CFG_1_field_set ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32 c8_mdsp_reg_CENTAUR8_CDRU_CFG_1_read      ( c8_mdsp_buffer_t *b_ptr, c8_handle_t *h_ptr, UINT32 A )
 | 
 +--------------------------------------------------------------------------------------------------------------------------------------------------*/
#endif /* _C8_MDSP_IO_H */
