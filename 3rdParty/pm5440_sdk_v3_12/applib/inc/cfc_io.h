/******************************************************************************
 *   COPYRIGHT (C) 2011 PMC-SIERRA, INC. ALL RIGHTS RESERVED.
 * --------------------------------------------------------------------------
 *  This software embodies materials and concepts which are proprietary and
 *  confidential to PMC-Sierra, Inc.
 *  PMC-Sierra distributes this software to its customers pursuant to the
 *  terms and conditions of the Software License Agreement
 *  contained in the text file software.lic that is distributed along with
 *  the software. This software can only be utilized if all
 *  terms and conditions of the Software License Agreement are
 *  accepted. If there are any questions, concerns, or if the
 *  Software License Agreement text file, software.lic, is missing please
 *  contact PMC-Sierra for assistance.
 * -------------------------------------------------------------------------
 *   DESCRIPTION:
 *     contains prototypes for the field accessor functions
 *     and register accessor functions for the cfc block
 * 
 *   NOTES:
 *     This file is generated by the script codegen.pm, version 1.1
 *     Do not modify this file.
 * 
 *     The input file is ../src/ioxml/lw20_15_99_generic_reg.xml
 *     block_uri "file:../docs/rda/lw20_15_99_reg.xml"
 *     block_part_number "LW20_15_99"
 *     block_mnemonic "CFC"
 * 
 *****************************************************************************/

/*--------------------------------------------------------------------------------.
 | The pattern for accessing cfc io functions is:
 | {
 |     cfc_buffer_t b[1];
 |     cfc_buffer_init( b, h );
 |     value = cfc_field_<FIELD>_get( b, h );
 |     cfc_field_<FIELD>_set( b, h , value );
 | ...
 |     cfc_buffer_flush( b );
 | }
 | 
 | alternatively, if register coalescing is not needed then omit the buffer like:
 | 
 | value = cfc_field_<FIELD>_get( NULL, h );
 | cfc_field_<FIELD>_set( NULL, h , value );
 | 
 +-------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | 
 | +---------------------------------+
 | | Register 0x00000000 FIFO_CLRB_0 |
 | +---------------------------------+
 | | bit  31:0 R/W  FIFO_CLRB        |
 | +---------------------------------+
 | 
 | void   cfc_lfield_FIFO_CLRB_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_FIFO_CLRB_get       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_range_FIFO_CLRB_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_lfield_range_FIFO_CLRB_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-------------------------------------+
 | | Register 0x00000080 FIFO_IPT_BYPASS |
 | +-------------------------------------+
 | | bit  16 R/W  IPT_BYPASS             |
 | +-------------------------------------+
 | 
 | void   cfc_field_IPT_BYPASS_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_IPT_BYPASS_get ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | +---------------------------------------+
 | | Register 0x00000084 FIFO_IPT_MASK_CFC |
 | +---------------------------------------+
 | | bit  15:0 R/W  IPT_PAGE_MASK          |
 | +---------------------------------------+
 | 
 | void   cfc_field_IPT_PAGE_MASK_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_IPT_PAGE_MASK_get       ( cfc_buffer_t *b, cfc_handle_t *h )
 | void   cfc_field_range_IPT_PAGE_MASK_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_field_range_IPT_PAGE_MASK_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-----------------------------------------+
 | | Register 0x000000a0 FIFO_CFG            |
 | +-----------------------------------------+
 | | bit  28    R/W  FIFO_END_ADDR_CHG_ABORT |
 | | bit  24    R/W  FIFO_END_ADDR_CHG_REQ   |
 | | bit  22:16 R/W  FIFO_END_ADDR_CHG_ID    |
 | +-----------------------------------------+
 | 
 | void   cfc_field_FIFO_END_ADDR_CHG_ID_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_FIFO_END_ADDR_CHG_ID_get       ( cfc_buffer_t *b, cfc_handle_t *h )
 | void   cfc_field_range_FIFO_END_ADDR_CHG_ID_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_field_range_FIFO_END_ADDR_CHG_ID_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   cfc_field_FIFO_END_ADDR_CHG_ABORT_set    ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_FIFO_END_ADDR_CHG_ABORT_get    ( cfc_buffer_t *b, cfc_handle_t *h )
 | void   cfc_field_FIFO_END_ADDR_CHG_REQ_set      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_FIFO_END_ADDR_CHG_REQ_get      ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | +-------------------------------------+
 | | Register 0x000000a4 FIFO_CFG_STAT   |
 | +-------------------------------------+
 | | bit  0 R  FIFO_END_ADDR_CHG_SUCCESS |
 | +-------------------------------------+
 | 
 | UINT32 cfc_field_FIFO_END_ADDR_CHG_SUCCESS_get ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | +----------------------------------+
 | | Register 0x000000a8 FIFO_CFG_VAL |
 | +----------------------------------+
 | | bit  15:0 R/W  FIFO_END_ADDR     |
 | +----------------------------------+
 | 
 | void   cfc_field_FIFO_END_ADDR_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_FIFO_END_ADDR_get       ( cfc_buffer_t *b, cfc_handle_t *h )
 | void   cfc_field_range_FIFO_END_ADDR_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_field_range_FIFO_END_ADDR_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +------------------------------+
 | | Register 0x00000100 DBG_CTRL |
 | +------------------------------+
 | | bit  16   R/W  DBG_TRIG      |
 | | bit  10:0 R/W  DBG_RADDR     |
 | +------------------------------+
 | 
 | void   cfc_field_DBG_RADDR_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_DBG_RADDR_get       ( cfc_buffer_t *b, cfc_handle_t *h )
 | void   cfc_field_range_DBG_RADDR_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_field_range_DBG_RADDR_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   cfc_field_DBG_TRIG_set        ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | UINT32 cfc_field_DBG_TRIG_get        ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | +-------------------------------+
 | | Register 0x00000104 DBG_RDATA |
 | +-------------------------------+
 | | bit  31:0 R  DBG_RDATA        |
 | +-------------------------------+
 | 
 | UINT32 cfc_field_DBG_RDATA_get       ( cfc_buffer_t *b, cfc_handle_t *h )
 | UINT32 cfc_field_range_DBG_RDATA_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +----------------------------------------+
 | | Register 0x00000200 FIFO_OVR_INT_REG_0 |
 | +----------------------------------------+
 | | bit  31:0 R/W  FIFO_OVR_I              |
 | +----------------------------------------+
 | 
 | void      cfc_lfield_FIFO_OVR_I_set_to_clear       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void      cfc_lfield_FIFO_OVR_I_get                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void      cfc_lfield_range_FIFO_OVR_I_set_to_clear ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32    cfc_lfield_range_FIFO_OVR_I_get          ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_ERROR cfc_lfield_range_FIFO_OVR_I_poll_bit     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_ERROR cfc_lfield_FIFO_OVR_I_poll_bit           ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4], UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +----------------------------------------+
 | | Register 0x00000220 FIFO_UDR_INT_REG_0 |
 | +----------------------------------------+
 | | bit  31:0 R/W  FIFO_UDR_I              |
 | +----------------------------------------+
 | 
 | void      cfc_lfield_FIFO_UDR_I_set_to_clear       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void      cfc_lfield_FIFO_UDR_I_get                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void      cfc_lfield_range_FIFO_UDR_I_set_to_clear ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32    cfc_lfield_range_FIFO_UDR_I_get          ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_ERROR cfc_lfield_range_FIFO_UDR_I_poll_bit     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_ERROR cfc_lfield_FIFO_UDR_I_poll_bit           ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4], UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +--------------------------------------------+
 | | Register 0x00000240 FIFO_IPT_ERR_INT_REG_0 |
 | +--------------------------------------------+
 | | bit  31:0 R/W  IPT_ERR_I                   |
 | +--------------------------------------------+
 | 
 | void      cfc_lfield_IPT_ERR_I_set_to_clear       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void      cfc_lfield_IPT_ERR_I_get                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void      cfc_lfield_range_IPT_ERR_I_set_to_clear ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32    cfc_lfield_range_IPT_ERR_I_get          ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_ERROR cfc_lfield_range_IPT_ERR_I_poll_bit     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_ERROR cfc_lfield_IPT_ERR_I_poll_bit           ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4], UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +-------------------------------------------+
 | | Register 0x00000280 FIFO_OVR_INT_EN_REG_0 |
 | +-------------------------------------------+
 | | bit  31:0 R/W  FIFO_OVR_E                 |
 | +-------------------------------------------+
 | 
 | void   cfc_lfield_FIFO_OVR_E_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_FIFO_OVR_E_get       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_range_FIFO_OVR_E_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_lfield_range_FIFO_OVR_E_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-------------------------------------------+
 | | Register 0x000002a0 FIFO_UDR_INT_EN_REG_0 |
 | +-------------------------------------------+
 | | bit  31:0 R/W  FIFO_UDR_E                 |
 | +-------------------------------------------+
 | 
 | void   cfc_lfield_FIFO_UDR_E_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_FIFO_UDR_E_get       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_range_FIFO_UDR_E_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_lfield_range_FIFO_UDR_E_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-----------------------------------------------+
 | | Register 0x000002c0 FIFO_IPT_ERR_INT_EN_REG_0 |
 | +-----------------------------------------------+
 | | bit  31:0 R/W  IPT_ERR_E                      |
 | +-----------------------------------------------+
 | 
 | void   cfc_lfield_IPT_ERR_E_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_IPT_ERR_E_get       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value[4] )
 | void   cfc_lfield_range_IPT_ERR_E_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_lfield_range_IPT_ERR_E_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------------+
 | | Register (0x00000400 + (N) * 0x04) FIFO_IPT |
 | |     N[0..127]                               |
 | +---------------------------------------------+
 | | bit  24    R/W  IPT_VALID                   |
 | | bit  22:16 R/W  IPT_ID                      |
 | | bit  6:0   R/W  IPT_VA                      |
 | +---------------------------------------------+
 | 
 | void   cfc_field_IPT_VALID_set    ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 cfc_field_IPT_VALID_get    ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N )
 | void   cfc_field_IPT_ID_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 cfc_field_IPT_ID_get       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N )
 | void   cfc_field_range_IPT_ID_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_field_range_IPT_ID_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | void   cfc_field_IPT_VA_set       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 cfc_field_IPT_VA_get       ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N )
 | void   cfc_field_range_IPT_VA_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 cfc_field_range_IPT_VA_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------------+
 | | Register (0x00000800 + (N) * 0x4) FIFO_STAT |
 | |     N[0..127]                               |
 | +---------------------------------------------+
 | | bit  8 R  FIFO_EMPTY                        |
 | | bit  0 R  FIFO_FULL                         |
 | +---------------------------------------------+
 | 
 | UINT32 cfc_field_FIFO_EMPTY_get ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N )
 | UINT32 cfc_field_FIFO_FULL_get  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N )
 +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#ifndef _CFC_IO_H
#define _CFC_IO_H

#include "cfc.h"
#include "cfc_regs.h"
#include "cfc_io_inline.h"


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | TSB access functions
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions do not need to be accessed directly,... just included here for completeness.
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void      cfc_buffer_init               ( cfc_buffer_t *b, cfc_handle_t *h )
 | void      cfc_buffer_flush              ( cfc_buffer_t *b )
 | UINT32    cfc_reg_read                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mem_type, UINT32 reg )
 | void      cfc_reg_write                 ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 value )
 | void      cfc_field_set                 ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 unused_mask, UINT32 ofs, UINT32 value )
 | void      cfc_action_on_write_field_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 ofs, UINT32 value )
 | void      cfc_burst_read                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | void      cfc_burst_write               ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | PMC_ERROR cfc_poll_bit                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | Functions to Access Registers
 +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions can be used if for some reason the field getters & setters are not appropriate.
 +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void      cfc_reg_FIFO_CLRB_0_write                                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_CLRB_0_field_set                            ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_CLRB_0_read                                 ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_CLRB_1_write                                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_CLRB_1_field_set                            ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_CLRB_1_read                                 ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_CLRB_2_write                                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_CLRB_2_field_set                            ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_CLRB_2_read                                 ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_CLRB_3_write                                ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_CLRB_3_field_set                            ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_CLRB_3_read                                 ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_IPT_BYPASS_write                            ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_BYPASS_field_set                        ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_BYPASS_read                             ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_IPT_MASK_CFC_write                          ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_MASK_CFC_field_set                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_MASK_CFC_read                           ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_CFG_write                                   ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_CFG_field_set                               ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_CFG_read                                    ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_CFG_VAL_write                               ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_CFG_VAL_field_set                           ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_CFG_VAL_read                                ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_DBG_CTRL_write                                   ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_DBG_CTRL_field_set                               ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_DBG_CTRL_read                                    ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_IPT_array_write                             ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 value )
 | void      cfc_reg_FIFO_IPT_array_field_set                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_array_read                              ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N )
 | 
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_0_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_0_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_EN_REG_0_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_1_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_1_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_EN_REG_1_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_2_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_2_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_EN_REG_2_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_3_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_EN_REG_3_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_EN_REG_3_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_0_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_0_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_EN_REG_0_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_1_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_1_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_EN_REG_1_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_2_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_2_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_EN_REG_2_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_3_write                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_EN_REG_3_field_set                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_EN_REG_3_read                       ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_0_write                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_0_field_set              ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_EN_REG_0_read                   ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_1_write                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_1_field_set              ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_EN_REG_1_read                   ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_2_write                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_2_field_set              ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_EN_REG_2_read                   ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_3_write                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_EN_REG_3_field_set              ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_EN_REG_3_read                   ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | void      cfc_reg_FIFO_OVR_INT_REG_0_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_REG_0_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_REG_0_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_OVR_INT_REG_0_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_OVR_INT_REG_1_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_REG_1_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_REG_1_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_OVR_INT_REG_1_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_OVR_INT_REG_2_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_REG_2_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_REG_2_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_OVR_INT_REG_2_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_OVR_INT_REG_3_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_OVR_INT_REG_3_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_OVR_INT_REG_3_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_OVR_INT_REG_3_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_UDR_INT_REG_0_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_REG_0_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_REG_0_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_UDR_INT_REG_0_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_UDR_INT_REG_1_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_REG_1_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_REG_1_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_UDR_INT_REG_1_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_UDR_INT_REG_2_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_REG_2_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_REG_2_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_UDR_INT_REG_2_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_UDR_INT_REG_3_write                         ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_UDR_INT_REG_3_action_on_write_field_set     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_UDR_INT_REG_3_read                          ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_UDR_INT_REG_3_poll_bit                      ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_0_write                     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_0_action_on_write_field_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_REG_0_read                      ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_IPT_ERR_INT_REG_0_poll_bit                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_1_write                     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_1_action_on_write_field_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_REG_1_read                      ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_IPT_ERR_INT_REG_1_poll_bit                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_2_write                     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_2_action_on_write_field_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_REG_2_read                      ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_IPT_ERR_INT_REG_2_poll_bit                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_3_write                     ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 value )
 | void      cfc_reg_FIFO_IPT_ERR_INT_REG_3_action_on_write_field_set ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    cfc_reg_FIFO_IPT_ERR_INT_REG_3_read                      ( cfc_buffer_t *b, cfc_handle_t *h )
 | PMC_ERROR cfc_reg_FIFO_IPT_ERR_INT_REG_3_poll_bit                  ( cfc_buffer_t *b, cfc_handle_t *h, UINT32 mask, UINT32 value, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | UINT32    cfc_reg_FIFO_CFG_STAT_read                               ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | UINT32    cfc_reg_DBG_RDATA_read                                   ( cfc_buffer_t *b, cfc_handle_t *h )
 | 
 | UINT32    cfc_reg_FIFO_STAT_array_read                             ( cfc_buffer_t *b, cfc_handle_t *h, UINT32  N )
 | 
 +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#endif /* _CFC_IO_H */
