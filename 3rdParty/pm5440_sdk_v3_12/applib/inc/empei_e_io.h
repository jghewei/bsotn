/******************************************************************************
 *   COPYRIGHT (C) 2011 PMC-SIERRA, INC. ALL RIGHTS RESERVED.
 * --------------------------------------------------------------------------
 *  This software embodies materials and concepts which are proprietary and
 *  confidential to PMC-Sierra, Inc.
 *  PMC-Sierra distributes this software to its customers pursuant to the
 *  terms and conditions of the Software License Agreement
 *  contained in the text file software.lic that is distributed along with
 *  the software. This software can only be utilized if all
 *  terms and conditions of the Software License Agreement are
 *  accepted. If there are any questions, concerns, or if the
 *  Software License Agreement text file, software.lic, is missing please
 *  contact PMC-Sierra for assistance.
 * -------------------------------------------------------------------------
 *   DESCRIPTION:
 *     contains prototypes for the field accessor functions
 *     and register accessor functions for the empei_e block
 * 
 *   NOTES:
 *     This file is generated by the script codegen.pm, version 1.1
 *     Do not modify this file.
 * 
 *     The input file is ../src/ioxml/pm30_60_206_map.xml
 *     block_uri "../xxx.xml"
 *     block_part_number "PM30_60_206"
 *     block_mnemonic "EMPEI120_E"
 * 
 *****************************************************************************/

/*--------------------------------------------------------------------------------.
 | The pattern for accessing empei_e io functions is:
 | {
 |     empei_e_buffer_t b[1];
 |     empei_e_buffer_init( b, h );
 |     value = empei_e_field_<FIELD>_get( b, h );
 |     empei_e_field_<FIELD>_set( b, h , value );
 | ...
 |     empei_e_buffer_flush( b );
 | }
 | 
 | alternatively, if register coalescing is not needed then omit the buffer like:
 | 
 | value = empei_e_field_<FIELD>_get( NULL, h );
 | empei_e_field_<FIELD>_set( NULL, h , value );
 | 
 +-------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | 
 | +----------------------------------+
 | | Register 0x00000000 SW_RESET     |
 | +----------------------------------+
 | | bit  0 R/W  SW_RESET_ECLASS_CORE |
 | | bit  1 R/W  SW_RESET_ECLASS_NREG |
 | +----------------------------------+
 | 
 | void   empei_e_field_SW_RESET_ECLASS_CORE_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_SW_RESET_ECLASS_CORE_get ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_SW_RESET_ECLASS_NREG_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_SW_RESET_ECLASS_NREG_get ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | +---------------------------------+
 | | Register 0x00000004 LINK_ENABLE |
 | +---------------------------------+
 | | bit  11:0 R/W  LINK_ENABLE      |
 | +---------------------------------+
 | 
 | void   empei_e_field_LINK_ENABLE_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_LINK_ENABLE_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_LINK_ENABLE_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_LINK_ENABLE_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------+
 | | Register 0x0000001c SYS_INTL_OF_INT   |
 | +---------------------------------------+
 | | bit  11:0  R/W  SYS_Q_OVERFLOW_INT_I  |
 | | bit  23:12 R/W  INTL_Q_OVERFLOW_INT_I |
 | +---------------------------------------+
 | 
 | void                 empei_e_field_SYS_Q_OVERFLOW_INT_I_set_to_clear        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_SYS_Q_OVERFLOW_INT_I_get                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_SYS_Q_OVERFLOW_INT_I_set_to_clear  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_SYS_Q_OVERFLOW_INT_I_get           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_SYS_Q_OVERFLOW_INT_I_poll          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_SYS_Q_OVERFLOW_INT_I_poll                ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | void                 empei_e_field_INTL_Q_OVERFLOW_INT_I_set_to_clear       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_INTL_Q_OVERFLOW_INT_I_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_INTL_Q_OVERFLOW_INT_I_set_to_clear ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_INTL_Q_OVERFLOW_INT_I_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_INTL_Q_OVERFLOW_INT_I_poll         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_INTL_Q_OVERFLOW_INT_I_poll               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +--------------------------------------+
 | | Register 0x00000020 SYS_INS_UR_INT   |
 | +--------------------------------------+
 | | bit  11:0  R/W  SYS_Q_UNDERRUN_INT_I |
 | | bit  23:12 R/W  INS_Q_UNDERRUN_INT_I |
 | +--------------------------------------+
 | 
 | void                 empei_e_field_SYS_Q_UNDERRUN_INT_I_set_to_clear       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_SYS_Q_UNDERRUN_INT_I_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_SYS_Q_UNDERRUN_INT_I_set_to_clear ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_SYS_Q_UNDERRUN_INT_I_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_SYS_Q_UNDERRUN_INT_I_poll         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_SYS_Q_UNDERRUN_INT_I_poll               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | void                 empei_e_field_INS_Q_UNDERRUN_INT_I_set_to_clear       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_INS_Q_UNDERRUN_INT_I_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_INS_Q_UNDERRUN_INT_I_set_to_clear ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_INS_Q_UNDERRUN_INT_I_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_INS_Q_UNDERRUN_INT_I_poll         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_INS_Q_UNDERRUN_INT_I_poll               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +-----------------------------------------+
 | | Register 0x00000024 SYS_INS_Q_RSYNC_INT |
 | +-----------------------------------------+
 | | bit  11:0  R/W  SYS_Q_RESYNC_INT_I      |
 | | bit  23:12 R/W  INS_Q_RESYNC_INT_I      |
 | +-----------------------------------------+
 | 
 | void                 empei_e_field_SYS_Q_RESYNC_INT_I_set_to_clear       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_SYS_Q_RESYNC_INT_I_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_SYS_Q_RESYNC_INT_I_set_to_clear ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_SYS_Q_RESYNC_INT_I_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_SYS_Q_RESYNC_INT_I_poll         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_SYS_Q_RESYNC_INT_I_poll               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | void                 empei_e_field_INS_Q_RESYNC_INT_I_set_to_clear       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_INS_Q_RESYNC_INT_I_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_INS_Q_RESYNC_INT_I_set_to_clear ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_INS_Q_RESYNC_INT_I_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_INS_Q_RESYNC_INT_I_poll         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_INS_Q_RESYNC_INT_I_poll               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +--------------------------------------+
 | | Register 0x00000028 EXT_Q_RESYNC_INT |
 | +--------------------------------------+
 | | bit  11:0  R/W  EXT_Q_RESYNC_INT_I   |
 | | bit  23:12 R/W  INTL_Q_RESYNC_INT_I  |
 | +--------------------------------------+
 | 
 | void                 empei_e_field_EXT_Q_RESYNC_INT_I_set_to_clear        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_EXT_Q_RESYNC_INT_I_get                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_EXT_Q_RESYNC_INT_I_set_to_clear  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_EXT_Q_RESYNC_INT_I_get           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_EXT_Q_RESYNC_INT_I_poll          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_EXT_Q_RESYNC_INT_I_poll                ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | void                 empei_e_field_INTL_Q_RESYNC_INT_I_set_to_clear       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_INTL_Q_RESYNC_INT_I_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_INTL_Q_RESYNC_INT_I_set_to_clear ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_INTL_Q_RESYNC_INT_I_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_INTL_Q_RESYNC_INT_I_poll         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_INTL_Q_RESYNC_INT_I_poll               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +---------------------------------------+
 | | Register 0x00000038 INS_EXT_OF_INT_EN |
 | +---------------------------------------+
 | | bit  11:0  R/W  INS_Q_OVERFLOW_INT_E  |
 | | bit  23:12 R/W  EXT_Q_OVERFLOW_INT_E  |
 | +---------------------------------------+
 | 
 | void   empei_e_field_INS_Q_OVERFLOW_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INS_Q_OVERFLOW_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INS_Q_OVERFLOW_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INS_Q_OVERFLOW_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_EXT_Q_OVERFLOW_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_EXT_Q_OVERFLOW_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_EXT_Q_OVERFLOW_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_EXT_Q_OVERFLOW_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +----------------------------------------+
 | | Register 0x0000003c SYS_INTL_OF_INT_EN |
 | +----------------------------------------+
 | | bit  11:0  R/W  SYS_Q_OVERFLOW_INT_E   |
 | | bit  23:12 R/W  INTL_Q_OVERFLOW_INT_E  |
 | +----------------------------------------+
 | 
 | void   empei_e_field_SYS_Q_OVERFLOW_INT_E_set        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_SYS_Q_OVERFLOW_INT_E_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_SYS_Q_OVERFLOW_INT_E_set  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_SYS_Q_OVERFLOW_INT_E_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_Q_OVERFLOW_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_Q_OVERFLOW_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_Q_OVERFLOW_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_Q_OVERFLOW_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------+
 | | Register 0x00000040 SYS_INS_UR_INT_EN |
 | +---------------------------------------+
 | | bit  11:0  R/W  SYS_Q_UNDERRUN_INT_E  |
 | | bit  23:12 R/W  INS_Q_UNDERRUN_INT_E  |
 | +---------------------------------------+
 | 
 | void   empei_e_field_SYS_Q_UNDERRUN_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_SYS_Q_UNDERRUN_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_SYS_Q_UNDERRUN_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_SYS_Q_UNDERRUN_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INS_Q_UNDERRUN_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INS_Q_UNDERRUN_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INS_Q_UNDERRUN_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INS_Q_UNDERRUN_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------------+
 | | Register 0x00000044 SYS_INS_Q_RSYNC_INT_EN |
 | +--------------------------------------------+
 | | bit  11:0  R/W  SYS_Q_RESYNC_INT_E         |
 | | bit  23:12 R/W  INS_Q_RESYNC_INT_E         |
 | +--------------------------------------------+
 | 
 | void   empei_e_field_SYS_Q_RESYNC_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_SYS_Q_RESYNC_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_SYS_Q_RESYNC_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_SYS_Q_RESYNC_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INS_Q_RESYNC_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INS_Q_RESYNC_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INS_Q_RESYNC_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INS_Q_RESYNC_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-----------------------------------------+
 | | Register 0x00000048 EXT_Q_RESYNC_INT_EN |
 | +-----------------------------------------+
 | | bit  11:0  R/W  EXT_Q_RESYNC_INT_E      |
 | | bit  23:12 R/W  INTL_Q_RESYNC_INT_E     |
 | +-----------------------------------------+
 | 
 | void   empei_e_field_EXT_Q_RESYNC_INT_E_set        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_EXT_Q_RESYNC_INT_E_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_EXT_Q_RESYNC_INT_E_set  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_EXT_Q_RESYNC_INT_E_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_Q_RESYNC_INT_E_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_Q_RESYNC_INT_E_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_Q_RESYNC_INT_E_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_Q_RESYNC_INT_E_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +----------------------------------------+
 | | Register 0x00000058 INS_EXT_OF_INT_VAL |
 | +----------------------------------------+
 | | bit  11:0  R  INS_Q_OVERFLOW_INT_V     |
 | | bit  23:12 R  EXT_Q_OVERFLOW_INT_V     |
 | +----------------------------------------+
 | 
 | UINT32               empei_e_field_INS_Q_OVERFLOW_INT_V_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32               empei_e_field_range_INS_Q_OVERFLOW_INT_V_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_INS_Q_OVERFLOW_INT_V_poll ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_INS_Q_OVERFLOW_INT_V_poll       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | UINT32               empei_e_field_EXT_Q_OVERFLOW_INT_V_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32               empei_e_field_range_EXT_Q_OVERFLOW_INT_V_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_EXT_Q_OVERFLOW_INT_V_poll ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_EXT_Q_OVERFLOW_INT_V_poll       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +-----------------------------------------+
 | | Register 0x0000005c SYS_INTL_OF_INT_VAL |
 | +-----------------------------------------+
 | | bit  11:0  R  SYS_Q_OVERFLOW_INT_V      |
 | | bit  23:12 R  INTL_Q_OVERFLOW_INT_V     |
 | +-----------------------------------------+
 | 
 | UINT32               empei_e_field_SYS_Q_OVERFLOW_INT_V_get         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32               empei_e_field_range_SYS_Q_OVERFLOW_INT_V_get   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_SYS_Q_OVERFLOW_INT_V_poll  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_SYS_Q_OVERFLOW_INT_V_poll        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | UINT32               empei_e_field_INTL_Q_OVERFLOW_INT_V_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32               empei_e_field_range_INTL_Q_OVERFLOW_INT_V_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_INTL_Q_OVERFLOW_INT_V_poll ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_INTL_Q_OVERFLOW_INT_V_poll       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +----------------------------------------+
 | | Register 0x00000060 SYS_INS_UR_INT_VAL |
 | +----------------------------------------+
 | | bit  11:0  R  SYS_Q_UNDERRUN_INT_V     |
 | | bit  23:12 R  INS_Q_UNDERRUN_INT_V     |
 | +----------------------------------------+
 | 
 | UINT32               empei_e_field_SYS_Q_UNDERRUN_INT_V_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32               empei_e_field_range_SYS_Q_UNDERRUN_INT_V_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_SYS_Q_UNDERRUN_INT_V_poll ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_SYS_Q_UNDERRUN_INT_V_poll       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | UINT32               empei_e_field_INS_Q_UNDERRUN_INT_V_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32               empei_e_field_range_INS_Q_UNDERRUN_INT_V_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | PMC_POLL_RETURN_TYPE empei_e_field_range_INS_Q_UNDERRUN_INT_V_poll ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | PMC_POLL_RETURN_TYPE empei_e_field_INS_Q_UNDERRUN_INT_V_poll       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +--------------------------------------+
 | | Register 0x00000070 DATA_PATH_SELECT |
 | +--------------------------------------+
 | | bit  11:0 R/W  DATA_PATH_SELECT      |
 | +--------------------------------------+
 | 
 | void   empei_e_field_DATA_PATH_SELECT_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_DATA_PATH_SELECT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_DATA_PATH_SELECT_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_DATA_PATH_SELECT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +------------------------------------+
 | | Register 0x00000074 SYS_FCS_ENABLE |
 | +------------------------------------+
 | | bit  11:0 R/W  SYS_FCS_ENABLE      |
 | +------------------------------------+
 | 
 | void   empei_e_field_SYS_FCS_ENABLE_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_SYS_FCS_ENABLE_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_SYS_FCS_ENABLE_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_SYS_FCS_ENABLE_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-------------------------------------+
 | | Register 0x00000078 GFP_LINK_ENABLE |
 | +-------------------------------------+
 | | bit  11:0 R/W  GFP_LINK_ENABLE      |
 | +-------------------------------------+
 | 
 | void   empei_e_field_GFP_LINK_ENABLE_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_GFP_LINK_ENABLE_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_GFP_LINK_ENABLE_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_GFP_LINK_ENABLE_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +----------------------------------------+
 | | Register 0x0000007c TS_BCK_TO_BCK_CTRL |
 | +----------------------------------------+
 | | bit  11:0  R/W  TS_TIMER_ENABLE        |
 | | bit  27:16 R/W  TS_CONSUME_ENABLE      |
 | +----------------------------------------+
 | 
 | void   empei_e_field_TS_TIMER_ENABLE_set         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_TS_TIMER_ENABLE_get         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_TS_TIMER_ENABLE_set   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_TS_TIMER_ENABLE_get   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_TS_CONSUME_ENABLE_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_TS_CONSUME_ENABLE_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_TS_CONSUME_ENABLE_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_TS_CONSUME_ENABLE_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +----------------------------------+
 | | Register 0x00000080 CPB_LSC_LOW  |
 | +----------------------------------+
 | | bit  3:0   R/W  CPB_LINK_SCH_TS0 |
 | | bit  7:4   R/W  CPB_LINK_SCH_TS1 |
 | | bit  11:8  R/W  CPB_LINK_SCH_TS2 |
 | | bit  15:12 R/W  CPB_LINK_SCH_TS3 |
 | | bit  19:16 R/W  CPB_LINK_SCH_TS4 |
 | | bit  23:20 R/W  CPB_LINK_SCH_TS5 |
 | | bit  27:24 R/W  CPB_LINK_SCH_TS6 |
 | | bit  31:28 R/W  CPB_LINK_SCH_TS7 |
 | +----------------------------------+
 | 
 | void   empei_e_field_CPB_LINK_SCH_TS0_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS0_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS0_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS0_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS1_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS1_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS1_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS1_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS2_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS2_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS2_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS2_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS3_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS3_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS3_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS3_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS4_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS4_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS4_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS4_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS5_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS5_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS5_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS5_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS6_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS6_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS6_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS6_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS7_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS7_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS7_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS7_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------------+
 | | Register 0x00000084 CPB_USC_HIGH            |
 | +---------------------------------------------+
 | | bit  3:0   R/W  CPB_LINK_SCH_TS8            |
 | | bit  7:4   R/W  CPB_LINK_SCH_TS9            |
 | | bit  11:8  R/W  CPB_LINK_SCH_TS10           |
 | | bit  15:12 R/W  CPB_LINK_SCH_TS11           |
 | | bit  19:16 R/W  CPB_LINK_SCH_OFFSET_EXTRACT |
 | | bit  31:28 R/W  CPB_LINK_SCH_LAST_TIMESLOT  |
 | +---------------------------------------------+
 | 
 | void   empei_e_field_CPB_LINK_SCH_TS8_set                  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS8_get                  ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS8_set            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS8_get            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS9_set                  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS9_get                  ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS9_set            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS9_get            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS10_set                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS10_get                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS10_set           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS10_get           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_TS11_set                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_TS11_get                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_TS11_set           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_TS11_get           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_OFFSET_EXTRACT_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_OFFSET_EXTRACT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_OFFSET_EXTRACT_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_OFFSET_EXTRACT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_CPB_LINK_SCH_LAST_TIMESLOT_set        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_CPB_LINK_SCH_LAST_TIMESLOT_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_CPB_LINK_SCH_LAST_TIMESLOT_set  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_CPB_LINK_SCH_LAST_TIMESLOT_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-----------------------------------+
 | | Register 0x00000088 INTL_LSC_LOW  |
 | +-----------------------------------+
 | | bit  3:0   R/W  INTL_LINK_SCH_TS0 |
 | | bit  7:4   R/W  INTL_LINK_SCH_TS1 |
 | | bit  11:8  R/W  INTL_LINK_SCH_TS2 |
 | | bit  15:12 R/W  INTL_LINK_SCH_TS3 |
 | | bit  19:16 R/W  INTL_LINK_SCH_TS4 |
 | | bit  23:20 R/W  INTL_LINK_SCH_TS5 |
 | | bit  27:24 R/W  INTL_LINK_SCH_TS6 |
 | | bit  31:28 R/W  INTL_LINK_SCH_TS7 |
 | +-----------------------------------+
 | 
 | void   empei_e_field_INTL_LINK_SCH_TS0_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS0_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS0_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS0_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS1_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS1_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS1_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS1_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS2_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS2_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS2_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS2_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS3_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS3_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS3_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS3_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS4_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS4_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS4_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS4_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS5_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS5_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS5_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS5_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS6_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS6_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS6_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS6_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS7_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS7_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS7_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS7_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------------+
 | | Register 0x0000008c INTL_USC_HIGH           |
 | +---------------------------------------------+
 | | bit  3:0   R/W  INTL_LINK_SCH_TS8           |
 | | bit  7:4   R/W  INTL_LINK_SCH_TS9           |
 | | bit  11:8  R/W  INTL_LINK_SCH_TS10          |
 | | bit  15:12 R/W  INTL_LINK_SCH_TS11          |
 | | bit  27:24 R/W  INTL_LINK_SCH_LAST_TIMESLOT |
 | +---------------------------------------------+
 | 
 | void   empei_e_field_INTL_LINK_SCH_TS8_set                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS8_get                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS8_set           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS8_get           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS9_set                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS9_get                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS9_set           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS9_get           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS10_set                ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS10_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS10_set          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS10_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_TS11_set                ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_TS11_get                ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_TS11_set          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_TS11_get          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INTL_LINK_SCH_LAST_TIMESLOT_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LINK_SCH_LAST_TIMESLOT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_INTL_LINK_SCH_LAST_TIMESLOT_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INTL_LINK_SCH_LAST_TIMESLOT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-------------------------------+
 | | Register 0x00000090 UPD_LSC   |
 | +-------------------------------+
 | | bit  0 R/W  EXTRACT_LS_UPDATE |
 | | bit  1 R/W  INTL_LS_UPDATE    |
 | +-------------------------------+
 | 
 | void   empei_e_field_EXTRACT_LS_UPDATE_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_EXTRACT_LS_UPDATE_get ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_INTL_LS_UPDATE_set    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_INTL_LS_UPDATE_get    ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | +--------------------------------+
 | | Register 0x00000094 DA_SA_SWAP |
 | +--------------------------------+
 | | bit  11:0 R/W  DA_SA_SWAP      |
 | +--------------------------------+
 | 
 | void   empei_e_field_DA_SA_SWAP_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_DA_SA_SWAP_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_DA_SA_SWAP_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_DA_SA_SWAP_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-----------------------------------+
 | | Register 0x000000a0 PMON_CNTR_CLR |
 | +-----------------------------------+
 | | bit  0 R/W  PMON_CNT_CLR          |
 | +-----------------------------------+
 | 
 | void   empei_e_field_PMON_CNT_CLR_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PMON_CNT_CLR_get ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | +--------------------------+
 | | Register 0x000000a4 GPIO |
 | +--------------------------+
 | | bit  7:0   R/W  GPO_HIGH |
 | | bit  15:8  R/W  GPO_LOW  |
 | | bit  31:16 R    GPI      |
 | +--------------------------+
 | 
 | void   empei_e_field_GPO_HIGH_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_GPO_HIGH_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_GPO_HIGH_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_GPO_HIGH_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_GPO_LOW_set        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_GPO_LOW_get        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_GPO_LOW_set  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_GPO_LOW_get  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | UINT32 empei_e_field_GPI_get            ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32 empei_e_field_range_GPI_get      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------+
 | | Register 0x000000d0 PKT_GEN_PKT_SIZE  |
 | +---------------------------------------+
 | | bit  15:0  R/W  PKT_GEN_LEN           |
 | | bit  23:16 R/W  PKT_GEN_WORDS_PER_PKT |
 | | bit  29:24 R/W  PKT_GEN_EOP_SIZE      |
 | +---------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_LEN_set                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_LEN_get                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_LEN_set           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_LEN_get           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_PKT_GEN_WORDS_PER_PKT_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_WORDS_PER_PKT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_WORDS_PER_PKT_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_WORDS_PER_PKT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_PKT_GEN_EOP_SIZE_set            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_EOP_SIZE_get            ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_EOP_SIZE_set      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_EOP_SIZE_get      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------+
 | | Register 0x000000d4 PKT_GEN_PLD |
 | +---------------------------------+
 | | bit  7:0 R/W  PKT_GEN_PLD       |
 | +---------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_PLD_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_PLD_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_PLD_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_PLD_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-------------------------------------+
 | | Register 0x000000d8 PKT_GEN_PKT_INT |
 | +-------------------------------------+
 | | bit  11:0 R/W  PKT_GEN_PKT_INT      |
 | +-------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_PKT_INT_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_PKT_INT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_PKT_INT_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_PKT_INT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------+
 | | Register 0x000000dc PKT_GEN_PKT_HDR1 |
 | +--------------------------------------+
 | | bit  31:0 R/W  PKT_GEN_DA_LOW        |
 | +--------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_DA_LOW_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_DA_LOW_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_DA_LOW_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_DA_LOW_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------+
 | | Register 0x000000e0 PKT_GEN_PKT_HDR2 |
 | +--------------------------------------+
 | | bit  31:0 R/W  PKT_GEN_SA_LOW        |
 | +--------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_SA_LOW_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_SA_LOW_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_SA_LOW_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_SA_LOW_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------+
 | | Register 0x000000e4 PKT_GEN_PKT_HDR3 |
 | +--------------------------------------+
 | | bit  15:0  R/W  PKT_GEN_DA_UPPER     |
 | | bit  31:16 R/W  PKT_GEN_SA_UPPER     |
 | +--------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_DA_UPPER_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_DA_UPPER_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_DA_UPPER_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_DA_UPPER_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_PKT_GEN_SA_UPPER_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_SA_UPPER_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_SA_UPPER_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_SA_UPPER_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------+
 | | Register 0x000000e8 PKT_GEN_PKT_HDR4 |
 | +--------------------------------------+
 | | bit  15:0 R/W  PKT_GEN_LEN_TYPE      |
 | +--------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_LEN_TYPE_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_LEN_TYPE_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_LEN_TYPE_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_LEN_TYPE_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------+
 | | Register 0x000000ec PKT_GEN_PKT_HDR5 |
 | +--------------------------------------+
 | | bit  31:0 R/W  PKT_GEN_VLAN_OUT      |
 | +--------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_VLAN_OUT_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_VLAN_OUT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_VLAN_OUT_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_VLAN_OUT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------+
 | | Register 0x000000f0 PKT_GEN_PKT_HDR6 |
 | +--------------------------------------+
 | | bit  31:0 R/W  PKT_GEN_VLAN_IN       |
 | +--------------------------------------+
 | 
 | void   empei_e_field_PKT_GEN_VLAN_IN_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_PKT_GEN_VLAN_IN_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_PKT_GEN_VLAN_IN_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_PKT_GEN_VLAN_IN_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------+
 | | Register 0x000000f4 PKT_GEN_EN |
 | +--------------------------------+
 | | bit  3:0 R/W  PKT_GEN_LINK     |
 | | bit  16  R/W  PKT_GEN_ENABLE   |
 | | bit  17  R    PKT_GEN_BUSY     |
 | +--------------------------------+
 | 
 | void                 empei_e_field_PKT_GEN_LINK_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_PKT_GEN_LINK_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_field_range_PKT_GEN_LINK_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32               empei_e_field_range_PKT_GEN_LINK_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | void                 empei_e_field_PKT_GEN_ENABLE_set     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32               empei_e_field_PKT_GEN_ENABLE_get     ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | UINT32               empei_e_field_PKT_GEN_BUSY_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_field_PKT_GEN_BUSY_poll      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | +--------------------------------+
 | | Register 0x000000f8 LINK_RESET |
 | +--------------------------------+
 | | bit  11:0 R/W  LINK_RESET      |
 | +--------------------------------+
 | 
 | void   empei_e_field_LINK_RESET_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | UINT32 empei_e_field_LINK_RESET_get       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void   empei_e_field_range_LINK_RESET_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_LINK_RESET_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +------------------------------------------+
 | | Register (0x00000380 + (N) * 4) TS_TIMER |
 | |     N[0..11]                             |
 | +------------------------------------------+
 | | bit  9:0 R/W  TS_TIMER                   |
 | +------------------------------------------+
 | 
 | void   empei_e_lfield_TS_TIMER_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[12] )
 | void   empei_e_lfield_TS_TIMER_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[12] )
 | void   empei_e_lfield_range_TS_TIMER_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_lfield_range_TS_TIMER_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +------------------------------------------+
 | | Register (0x00000400 + (N) * 4) SYS_PMAP |
 | |     N[0..95]                             |
 | +------------------------------------------+
 | | bit  7:0 R/W  SYS_PRIORITY_MAP           |
 | +------------------------------------------+
 | 
 | void   empei_e_lfield_SYS_PRIORITY_MAP_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[96] )
 | void   empei_e_lfield_SYS_PRIORITY_MAP_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[96] )
 | void   empei_e_lfield_range_SYS_PRIORITY_MAP_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_lfield_range_SYS_PRIORITY_MAP_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +------------------------------------------+
 | | Register (0x00000600 + (N) * 4) INS_PMAP |
 | |     N[0..47]                             |
 | +------------------------------------------+
 | | bit  7:0 R/W  INS_PRIORITY_MAP           |
 | +------------------------------------------+
 | 
 | void   empei_e_lfield_INS_PRIORITY_MAP_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[48] )
 | void   empei_e_lfield_INS_PRIORITY_MAP_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[48] )
 | void   empei_e_lfield_range_INS_PRIORITY_MAP_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_lfield_range_INS_PRIORITY_MAP_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +---------------------------------------------+
 | | Register (0x00000800 + (N) * 4) DRR_QUANTUM |
 | |     N[0..11]                                |
 | +---------------------------------------------+
 | | bit  15:0  R/W  SYS_QUANTUM                 |
 | | bit  31:16 R/W  INS_QUANTUM                 |
 | +---------------------------------------------+
 | 
 | void   empei_e_field_SYS_QUANTUM_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 empei_e_field_SYS_QUANTUM_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N )
 | void   empei_e_field_range_SYS_QUANTUM_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_SYS_QUANTUM_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_INS_QUANTUM_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 empei_e_field_INS_QUANTUM_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N )
 | void   empei_e_field_range_INS_QUANTUM_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_INS_QUANTUM_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +-------------------------------------------------+
 | | Register (0x00000a00 + (N) * 4) EXT_PMON_CONFIG |
 | |     N[0..63]                                    |
 | +-------------------------------------------------+
 | | bit  8:0 R/W  EXT_PMON_CFG                      |
 | | bit  9   R/W  EXT_PMON_EN                       |
 | +-------------------------------------------------+
 | 
 | void   empei_e_field_EXT_PMON_CFG_set       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 empei_e_field_EXT_PMON_CFG_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N )
 | void   empei_e_field_range_EXT_PMON_CFG_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit, UINT32 value )
 | UINT32 empei_e_field_range_EXT_PMON_CFG_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 start_bit, UINT32 stop_bit )
 | void   empei_e_field_EXT_PMON_EN_set        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 value )
 | UINT32 empei_e_field_EXT_PMON_EN_get        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N )
 | 
 | +--------------------------------------------------+
 | | Register (0x00000b00 + (N) * 4) EXT_PMON_PKT_CNT |
 | |     N[0..63]                                     |
 | +--------------------------------------------------+
 | | bit  16:0 R  EXT_PMON_PKT_CNT                    |
 | +--------------------------------------------------+
 | 
 | void   empei_e_lfield_EXT_PMON_PKT_CNT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[64] )
 | UINT32 empei_e_lfield_range_EXT_PMON_PKT_CNT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 | 
 | +--------------------------------------------------+
 | | Register (0x00000d00 + (N) * 4) INS_PMON_PKT_CNT |
 | |     N[0..47]                                     |
 | +--------------------------------------------------+
 | | bit  19:0 R  INS_PMON_PKT_CNT                    |
 | +--------------------------------------------------+
 | 
 | void   empei_e_lfield_INS_PMON_PKT_CNT_get       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value[48] )
 | UINT32 empei_e_lfield_range_INS_PMON_PKT_CNT_get ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 start_bit, UINT32 stop_bit )
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#ifndef _EMPEI_E_IO_H
#define _EMPEI_E_IO_H

#include "empei_e_loc.h"
#include "empei_e_regs.h"
#include "empei_e_io_inline.h"


/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | TSB access functions
 +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions do not need to be accessed directly,... just included here for completeness.
 +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void                 empei_e_buffer_init               ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | void                 empei_e_buffer_flush              ( empei_e_buffer_t *b )
 | UINT32               empei_e_reg_read                  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mem_type, UINT32 reg )
 | void                 empei_e_reg_write                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 value )
 | void                 empei_e_field_set                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 unused_mask, UINT32 ofs, UINT32 value )
 | void                 empei_e_action_on_write_field_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 ofs, UINT32 value )
 | void                 empei_e_burst_read                ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | void                 empei_e_burst_write               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 len, UINT32 *value )
 | PMC_POLL_RETURN_TYPE empei_e_poll                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mem_type, UINT32 reg, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
 | Functions to Access Registers
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | These functions can be used if for some reason the field getters & setters are not appropriate.
 +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | void                 empei_e_reg_LINK_ENABLE_write                             ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_LINK_ENABLE_field_set                         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_LINK_ENABLE_read                              ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_DATA_PATH_SELECT_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_DATA_PATH_SELECT_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_DATA_PATH_SELECT_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_SYS_FCS_ENABLE_write                          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SYS_FCS_ENABLE_field_set                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SYS_FCS_ENABLE_read                           ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_GFP_LINK_ENABLE_write                         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_GFP_LINK_ENABLE_field_set                     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_GFP_LINK_ENABLE_read                          ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_TS_BCK_TO_BCK_CTRL_write                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_TS_BCK_TO_BCK_CTRL_field_set                  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_TS_BCK_TO_BCK_CTRL_read                       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_CPB_LSC_LOW_write                             ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_CPB_LSC_LOW_field_set                         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_CPB_LSC_LOW_read                              ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_CPB_USC_HIGH_write                            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_CPB_USC_HIGH_field_set                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_CPB_USC_HIGH_read                             ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_INTL_LSC_LOW_write                            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_INTL_LSC_LOW_field_set                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_INTL_LSC_LOW_read                             ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_INTL_USC_HIGH_write                           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_INTL_USC_HIGH_field_set                       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_INTL_USC_HIGH_read                            ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void      empei_e_reg_DA_SA_SWAP_write                              ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void      empei_e_reg_DA_SA_SWAP_field_set                          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    empei_e_reg_DA_SA_SWAP_read                               ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void      empei_e_reg_GPIO_write                                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void      empei_e_reg_GPIO_field_set                                ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32    empei_e_reg_GPIO_read                                     ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_SIZE_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_SIZE_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_SIZE_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PLD_write                             ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PLD_field_set                         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PLD_read                              ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_INT_write                         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_INT_field_set                     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_INT_read                          ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_HDR1_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_HDR1_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_HDR1_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_HDR2_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_HDR2_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_HDR2_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_HDR3_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_HDR3_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_HDR3_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_HDR4_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_HDR4_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_HDR4_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_HDR5_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_HDR5_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_HDR5_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_PKT_HDR6_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_PKT_HDR6_field_set                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_PKT_HDR6_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PKT_GEN_EN_write                              ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PKT_GEN_EN_field_set                          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PKT_GEN_EN_read                               ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_PKT_GEN_EN_poll                               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void                 empei_e_reg_TS_TIMER_array_burst_write                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | void                 empei_e_reg_TS_TIMER_array_field_set                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N, UINT32 mask, UINT32 ofs, UINT32 value )
 | void                 empei_e_reg_TS_TIMER_array_burst_read                     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | UINT32               empei_e_reg_TS_TIMER_array_read                           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N )
 | 
 | void                 empei_e_reg_INS_PMAP_array_burst_write                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | void                 empei_e_reg_INS_PMAP_array_field_set                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N, UINT32 mask, UINT32 ofs, UINT32 value )
 | void                 empei_e_reg_INS_PMAP_array_burst_read                     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | UINT32               empei_e_reg_INS_PMAP_array_read                           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N )
 | 
 | void                 empei_e_reg_SYS_PMAP_array_burst_write                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | void                 empei_e_reg_SYS_PMAP_array_field_set                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N, UINT32 mask, UINT32 ofs, UINT32 value )
 | void                 empei_e_reg_SYS_PMAP_array_burst_read                     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | UINT32               empei_e_reg_SYS_PMAP_array_read                           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N )
 | 
 | void                 empei_e_reg_DRR_QUANTUM_array_write                       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 value )
 | void                 empei_e_reg_DRR_QUANTUM_array_field_set                   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_DRR_QUANTUM_array_read                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N )
 | 
 | void                 empei_e_reg_EXT_PMON_CONFIG_array_write                   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 value )
 | void                 empei_e_reg_EXT_PMON_CONFIG_array_field_set               ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_EXT_PMON_CONFIG_array_read                    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32  N )
 | 
 | void                 empei_e_reg_UPD_LSC_write                                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_UPD_LSC_field_set                             ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_UPD_LSC_read                                  ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_PMON_CNTR_CLR_write                           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_PMON_CNTR_CLR_field_set                       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_PMON_CNTR_CLR_read                            ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_LINK_RESET_write                              ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_LINK_RESET_field_set                          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_LINK_RESET_read                               ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_INS_EXT_OF_INT_EN_write                       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_INS_EXT_OF_INT_EN_field_set                   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_INS_EXT_OF_INT_EN_read                        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_SYS_INTL_OF_INT_EN_write                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SYS_INTL_OF_INT_EN_field_set                  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SYS_INTL_OF_INT_EN_read                       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_SYS_INS_UR_INT_EN_write                       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SYS_INS_UR_INT_EN_field_set                   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SYS_INS_UR_INT_EN_read                        ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_SYS_INS_Q_RSYNC_INT_EN_write                  ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SYS_INS_Q_RSYNC_INT_EN_field_set              ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SYS_INS_Q_RSYNC_INT_EN_read                   ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_EXT_Q_RESYNC_INT_EN_write                     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_EXT_Q_RESYNC_INT_EN_field_set                 ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_EXT_Q_RESYNC_INT_EN_read                      ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 | void                 empei_e_reg_SYS_INTL_OF_INT_write                         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SYS_INTL_OF_INT_action_on_write_field_set     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SYS_INTL_OF_INT_read                          ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_SYS_INTL_OF_INT_poll                          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void                 empei_e_reg_SYS_INS_UR_INT_write                          ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SYS_INS_UR_INT_action_on_write_field_set      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SYS_INS_UR_INT_read                           ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_SYS_INS_UR_INT_poll                           ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void                 empei_e_reg_SYS_INS_Q_RSYNC_INT_write                     ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SYS_INS_Q_RSYNC_INT_action_on_write_field_set ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SYS_INS_Q_RSYNC_INT_read                      ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_SYS_INS_Q_RSYNC_INT_poll                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void                 empei_e_reg_EXT_Q_RESYNC_INT_write                        ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_EXT_Q_RESYNC_INT_action_on_write_field_set    ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_EXT_Q_RESYNC_INT_read                         ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_EXT_Q_RESYNC_INT_poll                         ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | UINT32               empei_e_reg_INS_EXT_OF_INT_VAL_read                       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_INS_EXT_OF_INT_VAL_poll                       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | UINT32               empei_e_reg_SYS_INTL_OF_INT_VAL_read                      ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_SYS_INTL_OF_INT_VAL_poll                      ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | UINT32               empei_e_reg_SYS_INS_UR_INT_VAL_read                       ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | PMC_POLL_RETURN_TYPE empei_e_reg_SYS_INS_UR_INT_VAL_poll                       ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 value, PMC_POLL_COMPARISON_TYPE cmp, UINT32 max_count, UINT32 *num_failed_polls, UINT32 delay_between_polls_in_microseconds )
 | 
 | void                 empei_e_reg_INS_PMON_PKT_CNT_array_burst_read             ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | UINT32               empei_e_reg_INS_PMON_PKT_CNT_array_read                   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N )
 | 
 | void                 empei_e_reg_EXT_PMON_PKT_CNT_array_burst_read             ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 ofs, UINT32 len, UINT32 *value )
 | UINT32               empei_e_reg_EXT_PMON_PKT_CNT_array_read                   ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 N )
 | 
 | void                 empei_e_reg_SW_RESET_write                                ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 value )
 | void                 empei_e_reg_SW_RESET_field_set                            ( empei_e_buffer_t *b, empei_e_handle_t *h, UINT32 mask, UINT32 ofs, UINT32 value )
 | UINT32               empei_e_reg_SW_RESET_read                                 ( empei_e_buffer_t *b, empei_e_handle_t *h )
 | 
 +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
#endif /* _EMPEI_E_IO_H */
